// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoContainer renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoContainer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="itemList"
        >
          <React.Fragment>
             
            <TodoItem
              index={0}
              item={
                Object {
                  "isComplete": false,
                  "isDeleteInGrace": false,
                  "isDeleted": false,
                  "isSuccess": false,
                  "name": "test",
                }
              }
              update={[Function]}
            />
            <TodoItem
              index={1}
              item={
                Object {
                  "isComplete": false,
                  "isDeleteInGrace": false,
                  "isDeleted": false,
                  "isSuccess": true,
                  "name": "test2",
                }
              }
              update={[Function]}
            />
             
          </React.Fragment>
        </div>,
        <WithStyles(Button)
          className="addUserButton"
          color="primary"
          onClick={[Function]}
          variant="contained"
        >
           
          Add Item
           
        </WithStyles(Button)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
             
            <TodoItem
              index={0}
              item={
                Object {
                  "isComplete": false,
                  "isDeleteInGrace": false,
                  "isDeleted": false,
                  "isSuccess": false,
                  "name": "test",
                }
              }
              update={[Function]}
            />
            <TodoItem
              index={1}
              item={
                Object {
                  "isComplete": false,
                  "isDeleteInGrace": false,
                  "isDeleted": false,
                  "isSuccess": true,
                  "name": "test2",
                }
              }
              update={[Function]}
            />
             
          </React.Fragment>,
          "className": "itemList",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              " ",
              Array [
                <TodoItem
                  index={0}
                  item={
                    Object {
                      "isComplete": false,
                      "isDeleteInGrace": false,
                      "isDeleted": false,
                      "isSuccess": false,
                      "name": "test",
                    }
                  }
                  update={[Function]}
                />,
                <TodoItem
                  index={1}
                  item={
                    Object {
                      "isComplete": false,
                      "isDeleteInGrace": false,
                      "isDeleted": false,
                      "isSuccess": true,
                      "name": "test2",
                    }
                  }
                  update={[Function]}
                />,
              ],
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "index": 0,
                "item": Object {
                  "isComplete": false,
                  "isDeleteInGrace": false,
                  "isDeleted": false,
                  "isSuccess": false,
                  "name": "test",
                },
                "update": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "index": 1,
                "item": Object {
                  "isComplete": false,
                  "isDeleteInGrace": false,
                  "isDeleted": false,
                  "isSuccess": true,
                  "name": "test2",
                },
                "update": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " ",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            " ",
            "Add Item",
            " ",
          ],
          "className": "addUserButton",
          "color": "primary",
          "onClick": [Function],
          "variant": "contained",
        },
        "ref": null,
        "rendered": Array [
          " ",
          "Add Item",
          " ",
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="itemList"
          >
            <React.Fragment>
               
              <TodoItem
                index={0}
                item={
                  Object {
                    "isComplete": false,
                    "isDeleteInGrace": false,
                    "isDeleted": false,
                    "isSuccess": false,
                    "name": "test",
                  }
                }
                update={[Function]}
              />
              <TodoItem
                index={1}
                item={
                  Object {
                    "isComplete": false,
                    "isDeleteInGrace": false,
                    "isDeleted": false,
                    "isSuccess": true,
                    "name": "test2",
                  }
                }
                update={[Function]}
              />
               
            </React.Fragment>
          </div>,
          <WithStyles(Button)
            className="addUserButton"
            color="primary"
            onClick={[Function]}
            variant="contained"
          >
             
            Add Item
             
          </WithStyles(Button)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <React.Fragment>
               
              <TodoItem
                index={0}
                item={
                  Object {
                    "isComplete": false,
                    "isDeleteInGrace": false,
                    "isDeleted": false,
                    "isSuccess": false,
                    "name": "test",
                  }
                }
                update={[Function]}
              />
              <TodoItem
                index={1}
                item={
                  Object {
                    "isComplete": false,
                    "isDeleteInGrace": false,
                    "isDeleted": false,
                    "isSuccess": true,
                    "name": "test2",
                  }
                }
                update={[Function]}
              />
               
            </React.Fragment>,
            "className": "itemList",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                " ",
                Array [
                  <TodoItem
                    index={0}
                    item={
                      Object {
                        "isComplete": false,
                        "isDeleteInGrace": false,
                        "isDeleted": false,
                        "isSuccess": false,
                        "name": "test",
                      }
                    }
                    update={[Function]}
                  />,
                  <TodoItem
                    index={1}
                    item={
                      Object {
                        "isComplete": false,
                        "isDeleteInGrace": false,
                        "isDeleted": false,
                        "isSuccess": true,
                        "name": "test2",
                      }
                    }
                    update={[Function]}
                  />,
                ],
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "index": 0,
                  "item": Object {
                    "isComplete": false,
                    "isDeleteInGrace": false,
                    "isDeleted": false,
                    "isSuccess": false,
                    "name": "test",
                  },
                  "update": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "index": 1,
                  "item": Object {
                    "isComplete": false,
                    "isDeleteInGrace": false,
                    "isDeleted": false,
                    "isSuccess": true,
                    "name": "test2",
                  },
                  "update": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " ",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              " ",
              "Add Item",
              " ",
            ],
            "className": "addUserButton",
            "color": "primary",
            "onClick": [Function],
            "variant": "contained",
          },
          "ref": null,
          "rendered": Array [
            " ",
            "Add Item",
            " ",
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
